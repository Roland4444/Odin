Утилита для формирования запроса и обмена данными с платежным шлюзом Сбербанка
Используется для совершения переводов с участием бизнес-карт Сбербанка.

********************
Чтобы перевести деньги с бизнес карты, нам нужно сделать следующее.
- зарегистрироваться на стороне платежного шлюза,
- сформировать запрос на перевод,
- с помощью утилиты join.exe выполнить соединение с платежным шлюзом
  и отправить запрос в Банк на перевод.

Список ключей, используемых утилитой:

join.exe [[/new] строка]
  /new	  Формирование запроса на перевод с карты на карту


********************

НИЖЕ ПРЕДСТАВЛЕНЫ ПРИМЕРЫ РАБОТЫ УТИЛИТЫ.

1. СТРУКТУРА ЗАПРОСА НА ВЫПОЛНЕНИЕ ПЕРЕВОДА С БИЗНЕС КАРТЫ
   Ниже представлен перечень полей, используемых при совершении перевода.

      !!! Все поля обязательны к заполнению.
 
      order = "{
                'summa': '1156',
                'order': 
                 {
                   'number': 'ПСА № 567/67-2020',
                   'date': '01.02.2020',
                   'distr': 'лом марка А5, вес 200 кг., цена 12000 руб. за тонну'
                 },
                'client':
                 {
                   'fullName': 'Ченкин Иван Михайлович',
                   'numDoc': '4321 098765'
                 },
                'resident': '1'   
               }"

 ------------
   !!! переменная "order" может передаваться ТОЛЬКО в виде строки.

2. РЕГИСТРАЦИЯ НОВОГО ПЕРЕВОДА 
    join.exe /new "order"
   
3. ТЕСТИРОВАНИЕ УТИЛИТЫ
    menu.exe



====================
********************
Перед началом работы сервиса:

1) Ввести учетные данные для доступа к платежному шлюзу.
   Логин и пароль получите после регистрации заявки, которую ранее Вы направляли
   сотруднику Банка для подключения к платежному сервису СберБанка.
   Учетные данные вводить в утилите**:
     - запустить файл "menu.exe"
     - выбрать пункт меню - 1 и следовать указаниям утилиты
     - в меню ">> РЕГИСТРАЦИЯ УТИЛИТЫ" ввести учетные данные.
     - после успешного ввода учетных данных вернуться в основное меню,
       выбрать п.2 для тестироания утилиты по зарегистрированным
       учетным данным.

  ______________________________________
   * - личный кабинет доступен по ссылке
       тест  https://3dsec.sberbank.ru/mportal3/auth/login
       пром  https://securepayments.sberbank.ru/mportal3/auth/login

   **- учетные данные регистрируется 1 раз и меняются только при переходе в промышленную
       эксплуатацию или при смене пароля и регистрации новой бизнес-карты.

-----------------------------------------------------------------------------------------

2) ДЛЯ ПОЛЬЗОВАТЕЛЕЙ ПО 1С:
   - зайти в конфигунатор 1С:
   - открыть сборку ../Primer/SBER.B2C.v4.epf
   - в функции "ОрдерПеременные" заменить строковые значения ссылочными.
   - список переменных, которые нужно заменить:

	сумма = "11,6"; 
     // Параметры первичного документа (Основание для перевода денег) //	
	ДокНомер = "123";
	ДокДата = "01.01.2020";
	ОписаниеПлатежа = "лом марка А5, вес 200 кг., цена 12000 руб. за тонну";       

     // ФИО получателя платежа и № паспорта указывать !!! ОБЯЗАТЕЛЬНО !!! //
	клиентФИО = "Иванов Иван Иванович";
	КлиентДУЛ = "1234 123456";

   - сохранить изменения
   - в тонком клиенте 1С: открыть сборку ../Primer/SBER.B2C.v4.epf, во вкладке "НАСТРОЙКА" указать 
     путь к исполняемому файлу (в диалоговом окне выбрать join.exe) и проверить 
     работоспособность модуля, нажав на кнопку "ПЕРЕВОД НА КАРТУ"

-----------------------------------------------------------------------------------------

   ДЛЯ ДЕРЖАТЕЛЕЙ ДРУГОГО ПО.
    - создать строку с переменными перевода:
      order = "{
                'summa': '1156',
                'order': 
                 {
                   'number': 'ПСА № 567/67-2020',
                   'date': '01.02.2020',
                   'distr': 'лом марка А5, вес 200 кг., цена 12000 руб. за тонну'
                 },
                'client':
                 {
                   'fullName': 'Ченкин Иван Михайлович',
                   'numDoc': '4321 098765'
                 },
                 'resident': '1'
               }"

    - для поля resident
        если значение "1", то это резидент 
        если значение "2", то это нерезидент

    - подключить в Вашей учетной системе COMObject "WScript.Shell"
    - выполнить запрос на регистрацию заказа к скрипту с помощью команды Exec
        WshExec = WshShell.Exec(полный_путь_к_скрипту\join.exe + " /new \"" + order + "\"") 
                                      // переменную order обязательно обвязать кавычками //
        Otvet = WshExec.stdout.readall() - используется для чтения ответа скрипта
      или
        WshExec = WshShell.Run(полный_путь_к_скрипту\join.exe + " /new \"" + order + "\"") 

      =====
        Синтаксис вызова команд из среды Shell:

        Exec(<Command>)

        Назначение: создаёт новый дочерний процесс (т.е. процесс с теми же переменными среды), 
        который запускает заданное консольное приложение. Возвращается объект "WshScriptExec", 
        который позволяет контролировать ход выполнения запущенного приложения и обеспечивает 
        доступ к потокам StdIn, StdOut и StdErr этого приложения.

        Параметры:
         <Command> - командная строка запуска приложения.
        -------------------------------------------------------------------------------------

        Run(<Command>,<WindowStyle>,<WaitOnReturn>)
        
        Назначение: Создаёт новый независимый процесс, который запускает заданное приложение.

        Параметры:
         <Command> - строка, командная строка запуска приложения.
         <WindowStyle> - необязательный, число. Определяет вид окна запускаемого приложения. 
             Некоторые возможные значения:
           1 - Активизирует и отображает окно.
           2 - Активизирует окно и отображает его в свёрнутом виде.
           3 - Активизирует окно и отображает его в максимизированном виде.
         <WaitOnReturn> - необязательный, булево (число). True - сценарий возобновит работу только
             после завершения вызванного процесса. False (по умолчанию) - управление передаётся 
             сразу обратно в сценарий.

        Описание: Если параметр <WaitOnReturn> установлен в True, метод возвращает код выхода 
        вызванного приложения. Иначе метод всегда возвращает ноль.
      =====

    ПРИМЕРЫ:
        запуск утилиты на VBA:
            Set WshShell = CreateObject("WScript.Shell")
            Set WshExec = WshShell.Run("../join.exe /new \"+ order + \"")

    - утилита сама выполнит переход по ссылке на ACS для ввода СМС-кода 
    - ввести СМС-код, полученный на телефон
    - после подтверждения ввода СМС-кода утилита сама выполнит переход на страницу 
      ввода номера карты
    - ввести номер карты получателя
    - после подтверждения ввода номера карты состоится проверка статуса перевода 

-----------------------------------------------------------------------------------------

3) Для отладки утилиты использовать архивные данные, которые хранятся в папке ../journal/
   с маской log_YYYYMMDD.txt
   где:
      YYYYMMDD - дата операции перевода  
